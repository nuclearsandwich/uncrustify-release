indent_columns                  = 4
indent_with_tabs                = 0
indent_class                    = true
indent_class_colon              = true
indent_switch_case              = 4
sp_arith                        = add
sp_assign                       = add
sp_enum_assign                  = add
sp_pp_concat                    = ignore
sp_bool                         = add
sp_compare                      = add
sp_inside_paren                 = add
sp_paren_paren                  = add
sp_before_ptr_star              = remove
sp_after_ptr_star               = add
sp_before_byref                 = remove
sp_after_byref                  = add
sp_before_sparen                = force
sp_inside_sparen                = add
sp_before_square                = remove
sp_before_squares               = remove
sp_inside_square                = add
sp_after_comma                  = add
sp_after_cast                   = remove
sp_inside_paren_cast            = add
sp_sizeof_paren                 = remove
sp_inside_braces_enum           = force
sp_inside_braces_struct         = force
sp_inside_braces                = force
sp_func_proto_paren             = remove
sp_func_def_paren               = remove
sp_inside_fparens               = remove
sp_inside_fparen                = add
sp_square_fparen                = remove
sp_func_call_paren              = remove
sp_return_paren                 = add
sp_cond_colon                   = add
sp_cond_question                = add
align_func_params               = true
align_var_def_span              = 1
align_assign_span               = 1
align_enum_equ_span             = 4
align_var_struct_span           = 2
align_struct_init_span          = 3
align_typedef_span              = 2
align_right_cmt_span            = 3
nl_start_of_file                = remove
nl_end_of_file                  = force
nl_end_of_file_min              = 1
nl_fcall_brace                  = add
nl_enum_brace                   = add
nl_struct_brace                 = add
nl_union_brace                  = add
nl_if_brace                     = add
nl_brace_else                   = add
nl_else_brace                   = add
nl_for_brace                    = add
nl_catch_brace                  = add
nl_brace_catch                  = add
nl_while_brace                  = add
nl_do_brace                     = add
nl_brace_while                  = add
nl_switch_brace                 = add
nl_after_case                   = true
nl_namespace_brace              = add
nl_template_class               = add
nl_class_brace                  = add
nl_class_init_args              = add
nl_func_type_name               = add
nl_func_proto_type_name         = add
nl_func_decl_args               = add
nl_fdef_brace                   = add
nl_after_semicolon              = true
nl_after_func_proto_group       = 2
eat_blanks_after_open_brace     = true
eat_blanks_before_close_brace   = true
mod_full_brace_do               = add
mod_full_brace_for              = add
mod_full_brace_if               = add
mod_full_brace_while            = add
mod_paren_on_return             = remove
# Fortran wrappers: interpret "FSUB(function)" as function name
set                               func_wrap FSUB
set                               func_wrap SCOREP_LIBWRAP_FUNC_NAME
set                               func_wrap CALL_SHMEM
set                               func_wrap CALL_PTHREAD_REAL_FUNC
