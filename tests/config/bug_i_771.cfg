indent_columns   = 4
indent_with_tabs = 0
#How to align the star in variable definitions.
# 0=Part of the type     'void *   foo;'
# 1=Part of the variable 'void     *foo;'
# 2=Dangling             'void    *foo;'
align_var_def_star_style = 1
# SS_INCLUDE: - space between variable and '*' or '&' is eaten
#     void     foo;  // gap=5, 'foo' is aligned
#     char     *foo; // gap=5, '*' is aligned
#     foomatic foo;  // gap=1, 'foo' is aligned
#  The gap is the columns between the first '*' or '&' before foo
#  and the previous token. [void - foo], [char - '*'], etc

# If the gap < m_gap, then the column is bumped out by the difference.
# So, if m_gap is 2, then the above would be:
# SS_INCLUDE:
#     void      foo;  // gap=6
#     char      *foo; // gap=6
#     foomatic  foo;  // gap=2

#The span for aligning struct/union (0=don't align)
align_var_struct_span    = 1

#The threshold for aligning struct/union member definitions (0=no limit)
align_var_struct_thresh  = 5
